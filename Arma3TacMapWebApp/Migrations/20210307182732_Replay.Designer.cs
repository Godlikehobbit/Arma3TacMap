// <auto-generated />
using System;
using Arma3TacMapWebApp.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arma3TacMapWebApp.Migrations
{
    [DbContext(typeof(Arma3TacMapContext))]
    [Migration("20210307182732_Replay")]
    partial class Replay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayFrame", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrameNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GameDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ServerDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("ReplayMapID", "FrameNumber");

                    b.ToTable("ReplayFrame");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayGroup", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Side")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReplayMapID", "GroupNumber");

                    b.ToTable("ReplayGroup");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayMap", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerUserID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReadOnlyToken")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TacMapID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorldName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReplayMapID");

                    b.HasIndex("OwnerUserID");

                    b.HasIndex("TacMapID");

                    b.ToTable("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayPlayer", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uid")
                        .HasColumnType("TEXT");

                    b.HasKey("ReplayMapID", "PlayerNumber");

                    b.ToTable("ReplayPlayer");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayUnit", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Side")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReplayMapID", "UnitNumber");

                    b.ToTable("ReplayUnit");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayVehicle", b =>
                {
                    b.Property<int>("ReplayMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT");

                    b.HasKey("ReplayMapID", "VehicleNumber");

                    b.ToTable("ReplayVehicle");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMap", b =>
                {
                    b.Property<int>("TacMapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventHref")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerUserID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ParentTacMapID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReadOnlyToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReadWriteToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorldName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TacMapID");

                    b.HasIndex("OwnerUserID");

                    b.HasIndex("ParentTacMapID");

                    b.ToTable("TacMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMapAccess", b =>
                {
                    b.Property<int>("TacMapAccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TacMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TacMapAccessID");

                    b.HasIndex("TacMapID");

                    b.HasIndex("UserID");

                    b.ToTable("TacMapAccess");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMapMarker", b =>
                {
                    b.Property<int>("TacMapMarkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MarkerData")
                        .HasColumnType("TEXT");

                    b.Property<int>("TacMapID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TacMapMarkerID");

                    b.HasIndex("TacMapID");

                    b.HasIndex("UserID");

                    b.ToTable("TacMapMarker");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsService")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SteamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserLabel")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.UserApiKey", b =>
                {
                    b.Property<int>("UserApiKeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashedKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("TEXT");

                    b.HasKey("UserApiKeyID");

                    b.HasIndex("UserID");

                    b.ToTable("UserApiKey");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayFrame", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.ReplayMap", "ReplayMap")
                        .WithMany("Frames")
                        .HasForeignKey("ReplayMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayGroup", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.ReplayMap", "ReplayMap")
                        .WithMany("Groups")
                        .HasForeignKey("ReplayMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayMap", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arma3TacMapWebApp.Entities.TacMap", "TacMap")
                        .WithMany()
                        .HasForeignKey("TacMapID");

                    b.Navigation("Owner");

                    b.Navigation("TacMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayPlayer", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.ReplayMap", "ReplayMap")
                        .WithMany("Players")
                        .HasForeignKey("ReplayMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayUnit", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.ReplayMap", "ReplayMap")
                        .WithMany("Units")
                        .HasForeignKey("ReplayMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayVehicle", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.ReplayMap", "ReplayMap")
                        .WithMany("Vehicles")
                        .HasForeignKey("ReplayMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplayMap");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMap", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arma3TacMapWebApp.Entities.TacMap", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentTacMapID");

                    b.Navigation("Owner");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMapAccess", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.TacMap", "TacMap")
                        .WithMany()
                        .HasForeignKey("TacMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arma3TacMapWebApp.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TacMap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.TacMapMarker", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.TacMap", "TacMap")
                        .WithMany()
                        .HasForeignKey("TacMapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arma3TacMapWebApp.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("TacMap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.UserApiKey", b =>
                {
                    b.HasOne("Arma3TacMapWebApp.Entities.User", "User")
                        .WithMany("ApiKeys")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.ReplayMap", b =>
                {
                    b.Navigation("Frames");

                    b.Navigation("Groups");

                    b.Navigation("Players");

                    b.Navigation("Units");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Arma3TacMapWebApp.Entities.User", b =>
                {
                    b.Navigation("ApiKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
